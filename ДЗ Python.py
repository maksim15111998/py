# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. Выведите минимальное количество монет, которые нужно перевернуть

# def min_flips(coins):
#     heads = 0
#     tails = 0
#     for coin in coins:
#         if coin == 0:  # герб
#             tails += 1
#         else:  # решка
#             heads += 1
#     return min(heads, tails)

# # Пример использования
# coins = [0, 1, 0, 1, 0]  # 0 - герб, 1 - решка
# min_flips_needed = min_flips(coins)
# print(min_flips_needed)
#--------------------------------------------------------------------------------------------------

#  Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

# def find_numbers(S, P):
#     for X in range(1, S+1):
#         Y = S - X
#         if X * Y == P:
#             return X, Y

# S = int(input("Введите сумму чисел S: "))
# P = int(input("Введите произведение чисел P: "))

# X, Y = find_numbers(S, P)
# print("Задуманные числа Петей: X =", X, ", Y =", Y)
#------------------------------------------------------------------------------------------------------------------------------------------
# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
# N=int(input("N:"))
# k=0
# while 2**k<=N:
#     k+=1
#     print(k)
